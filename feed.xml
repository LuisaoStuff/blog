<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Luis Vázquez Alejo</title>
    <description>Estudiante de ASIR</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 09 Oct 2019 11:14:18 +0200</pubDate>
    <lastBuildDate>Wed, 09 Oct 2019 11:14:18 +0200</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Publicación con Github-Pages</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://imgur.com/DIYxa6F&quot;&gt;&lt;img src=&quot;https://imgur.com/DIYxa6F.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;
&lt;strong&gt;Github&lt;/strong&gt; es una plataforma de desarrollo de software colaborativo y de control de versiones. Aunque existen algunas versiones paralelas como &lt;strong&gt;Gitlab&lt;/strong&gt;, que también se basan en el paquete &lt;em&gt;git&lt;/em&gt;, esta vez nos centraremos en &lt;strong&gt;Github&lt;/strong&gt;.
Lo primero que debemos tener es una cuenta en dicha página, además de contar con el paquete &lt;em&gt;git&lt;/em&gt; instalado en nuestra máquina. Para instalar este paquete solo tenemos que ejecutar &lt;code class=&quot;highlighter-rouge&quot;&gt;$ apt install git&lt;/code&gt;. Una vez hecho esto, accedemos a nuestra cuenta en github y creamos un nuevo repositorio.
&lt;a href=&quot;https://imgur.com/dYfEZq8&quot;&gt;&lt;img src=&quot;https://imgur.com/dYfEZq8.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;
A la hora de nombrar el repositorio tenemos dos opciones:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Página de &lt;em&gt;usuario&lt;/em&gt; (solo dispones de una): &lt;strong&gt;nombre-de-usuario.github.io&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Página de &lt;em&gt;proyecto&lt;/em&gt; (dispones de una por repositorio): &lt;strong&gt;nombre-de-usuario.github.io/repositorio&lt;/strong&gt;
En mi caso ya no puedo crear otra página de usuario, por lo que crearé la página &lt;em&gt;“prueba”&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://imgur.com/s8KyXwu&quot;&gt;&lt;img src=&quot;https://imgur.com/s8KyXwu.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;inicializar-repositorio-en-la-máquina-local&quot;&gt;Inicializar repositorio en la máquina local&lt;/h2&gt;

&lt;p&gt;Copiamos la dirección &lt;em&gt;ssh&lt;/em&gt; que obtenemos al iniciar el repositorio:
&lt;a href=&quot;https://imgur.com/mMNICQJ&quot;&gt;&lt;img src=&quot;https://imgur.com/mMNICQJ.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;
Después entramos en el directorio donde se genera el html, normalmente en el directirio &lt;strong&gt;_site/&lt;/strong&gt; y procedemos a ejecutar los siguientes comandos:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git init
$ git add .
$ git commit -m “first commit”
$ git remote add origin git@github.com:LuisaoStuff/luisaostuff.github.io-prueba.git
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A partir de aquí, cada vez que queramos modificar la página, deberíamos generarla en local para que se actualicen los ficheros html y después añadirlos y subirlos con &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;. Además indicaremos en el repositorio del entorno desarrollo que no se suban los ficheros &lt;strong&gt;.html&lt;/strong&gt; ubicados en el directorio &lt;strong&gt;_site&lt;/strong&gt;. Esto lo indicamos en el fichero &lt;strong&gt;.gitignore&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;integración-continua&quot;&gt;Integración continua&lt;/h2&gt;

&lt;p&gt;Como hemos visto, tenemos la página en dos repositorios github, uno con el entorno de desarrollo, donde tenemos los ficheros de configuración y el otro con los ficheros &lt;strong&gt;.html&lt;/strong&gt; que componen la página. A continuación vamos a automatizar el proceso de despliegue en producción a través de &lt;em&gt;Git Hooks&lt;/em&gt;. ¿En qué consisten? Son unos &lt;strong&gt;script&lt;/strong&gt; que se comportan como &lt;em&gt;triggers&lt;/em&gt;, ya que se ejecutan en determinados momentos, como por ejemplo en la ejecución de un &lt;strong&gt;commit&lt;/strong&gt; o antes de un &lt;strong&gt;push&lt;/strong&gt;. Estos &lt;em&gt;script&lt;/em&gt; se encuentran dentro del repositorio, concretamente en &lt;strong&gt;.git/hooks/&lt;/strong&gt;.
En nuestro caso utilizaremos el fichero &lt;strong&gt;pre-push&lt;/strong&gt; que se ejecuta antes del &lt;em&gt;git push&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;actualizando repositorio local&quot;
cp -r /home/luis/Escritorio/github/pagina-jekyll/_site/* /home/luis/Escritorio/github/LuisaoStuff.github.io/
cd /home/luis/Escritorio/github/LuisaoStuff.github.io/
git add *
git commit -m &quot;Autodeploy&quot;
git push
echo &quot;repositorio desplegado en producción&quot;
exit 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Con esto, cada vez que hayamos cambiado algun post, lo hayamos comprobado generando el entorno local y vayamos a subirlo al repositorio git de desarrollo, se subirá automáticamente al repositorio de producción. Es decir, copia el directorio &lt;em&gt;_site&lt;/em&gt; generado, después se situa en el directorio del repositorio y sube los cambios al repositorio de producción.&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Oct 2019 12:57:23 +0200</pubDate>
        <link>http://localhost:4000/2019/Publicaci%C3%B3n-con-Github-Pages/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Publicaci%C3%B3n-con-Github-Pages/</guid>
        
        <category>jekyll</category>
        
        <category>github</category>
        
        
        <category>jekyll</category>
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Como instalar una plantilla Jekyll</title>
        <description>&lt;p&gt;Lo primero que debemos hacer es buscar una plantilla que nos guste. Para esto hay diversas páginas, por ejemplo &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll Themes&lt;/a&gt;. Una vez hemos encontrado algo que encaje con nuestra idea, descargamos el &lt;strong&gt;zip&lt;/strong&gt; que nos ofrezca.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://imgur.com/cKOUd3m&quot;&gt;&lt;img src=&quot;https://imgur.com/cKOUd3m.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;
Lo descomprimimos y empezamos con la instalación de las &lt;em&gt;gemas&lt;/em&gt;. Accedemos al directorio, en nuestro caso &lt;strong&gt;./jekyll_uno&lt;/strong&gt; y ejecutamos &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle install&lt;/code&gt;.
En la distribución de &lt;strong&gt;debian&lt;/strong&gt; suele dar problemas el paquete &lt;strong&gt;nokogiri&lt;/strong&gt; al intentar instalarlo con el gestor &lt;em&gt;bundle&lt;/em&gt;. La solución más habitual a este problema de dependencias, es seguir los siguientes pasos que puedes ver en esta &lt;a href=&quot;https://nokogiri.org/tutorials/installing_nokogiri.html&quot;&gt;página&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ya solo nos quedaría inicializar jekyll y acceder a la página web para ver el resultado.
&lt;a href=&quot;https://imgur.com/1QBA4EB&quot;&gt;&lt;img src=&quot;https://imgur.com/1QBA4EB.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Sep 2019 12:57:23 +0200</pubDate>
        <link>http://localhost:4000/2019/Como-instalar-una-plantilla-Jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Como-instalar-una-plantilla-Jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Instalación y configuración de Jekyll</title>
        <description>&lt;h2 id=&quot;instalar-jekyll&quot;&gt;Instalar Jekyll&lt;/h2&gt;

&lt;p&gt;Para instalar &lt;em&gt;jekyll&lt;/em&gt; en Debian primero debemos comprobar que tenemos instalado &lt;em&gt;Ruby&lt;/em&gt;, pues es el lenguaje que utiliza. Una vez hecho esto (y tras haber &lt;em&gt;actualizado&lt;/em&gt; el sistema) ejecutamos el siguiente comando:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;crear-nueva-página&quot;&gt;Crear nueva página&lt;/h2&gt;

&lt;p&gt;Es bastante sencillo, tan solo hay que ejecutar &lt;code class=&quot;highlighter-rouge&quot;&gt;$ jekyll new jekyll-site&lt;/code&gt; y automáticamente se generará los correspondientes ficheros de configuración y los directorios donde almacenaremos los &lt;em&gt;markdown&lt;/em&gt; que darán contenido a nuestra página.Esta es la estructura generada:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tree jekyll-site
jekyll-site/
├── 404.html
├── about.md
├── _config.yml
├── Gemfile
├── Gemfile.lock
├── index.md
└── _posts
    └── 2019-09-25-welcome-to-jekyll.markdown

1 directory, 7 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ficheros-y-directorios-importantes&quot;&gt;Ficheros y directorios importantes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;: Te permite &lt;strong&gt;definir las dependencias&lt;/strong&gt; y las librerías de &lt;strong&gt;Ruby&lt;/strong&gt;, y es similar al fichero &lt;em&gt;requeriments.txt&lt;/em&gt; que usábamos en &lt;em&gt;python&lt;/em&gt; a la hora de desplegar la aplicación en &lt;em&gt;heroku&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;: Es el &lt;strong&gt;fichero de configuración&lt;/strong&gt; de jekyll (puedes modificar cómo va a generar las páginas).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/posts&lt;/code&gt;: Es el &lt;strong&gt;directorio donde vamos a guardar&lt;/strong&gt; los ficheros &lt;strong&gt;markdown&lt;/strong&gt; (en orden &lt;em&gt;cronológico&lt;/em&gt;) que darán contenido a nuestra web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;lanzar-el-entorno-web&quot;&gt;Lanzar el entorno web&lt;/h2&gt;

&lt;p&gt;Para generar la web en el entorno de desarrollo, entramos en el directorio &lt;code class=&quot;highlighter-rouge&quot;&gt;/jekyll-site&lt;/code&gt; y ejecutamos: &lt;code class=&quot;highlighter-rouge&quot;&gt;$ bundle exec jekyll serve&lt;/code&gt; .De esta manera podremos tener una previsualización de la web accediendo a &lt;em&gt;localhost:4000&lt;/em&gt; desde el navegador.&lt;/p&gt;

&lt;h2 id=&quot;modificando-_configyml&quot;&gt;Modificando _config.yml&lt;/h2&gt;

&lt;p&gt;Este fichero contiene por defecto solo algunos parámetros, pero podemos añadir cuantos nosotros queramos. Si instalamos una plantilla (como explico &lt;a href=&quot;/2019/Como-usar-una-plantilla-Jekyll/&quot;&gt;aquí&lt;/a&gt;) podremos observar que hay multiples parámetros adicionales. En principio, estos son los parámetros básicos:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Site settings
title: Your awesome title
email: your-email@example.com
baseurl: &quot;/&quot;

# Build settings
markdown: kramdown
theme: minima
plugins:
  - jekyll-feed

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;: Es el título que tendrá tu página y que aparecerá en el texto de la pestaña.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;: Añade un botón con el email que indiques (de la misma forma se puede añadir &lt;em&gt;twitter&lt;/em&gt;, &lt;em&gt;github&lt;/em&gt;, etc).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;: Indica la dirección de la página principal de la web, por ejemplo la raiz &lt;strong&gt;”/”&lt;/strong&gt; o &lt;strong&gt;“/home”&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt;: Se especifica la librería de &lt;em&gt;Ruby&lt;/em&gt; que se usará para &lt;strong&gt;generar&lt;/strong&gt; el &lt;strong&gt;html&lt;/strong&gt; a partir del &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ejemplo-básico&quot;&gt;Ejemplo básico&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;title: El título funciona!
email: luisvazquezalejo@gmail.com
baseurl: &quot;/home&quot;
github_username:  luisaostuff

# Build settings
markdown: kramdown
theme: minima
plugins:
  - jekyll-feed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://imgur.com/eC0V6Sq&quot;&gt;&lt;img src=&quot;https://imgur.com/eC0V6Sq.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;creando-la-primera-página&quot;&gt;Creando la primera página&lt;/h2&gt;

&lt;p&gt;Para añadir páginas, deberás escribirlas en formato &lt;em&gt;markdown&lt;/em&gt; y situarlas en el directorio &lt;strong&gt;/_posts&lt;/strong&gt;. Nuestro ejemplo consistirá en una &lt;em&gt;entrada de blog&lt;/em&gt; y modificaremos algunas lineas para dejar claras las reglas que deberemos seguir.
Lo primero que veremos en el fichero es una &lt;strong&gt;cabecera&lt;/strong&gt; como esta:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title:  &quot;Mi primera entrada!&quot;
date:   2019-10-02 23:18:39 +0200
categories: ejemplo
tags: [ejemplo, tutorial]
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Esta cabecera define los &lt;strong&gt;datos principales&lt;/strong&gt;, como el título de la entrada, la fecha y la categoría. Todo esto es &lt;strong&gt;necesario para&lt;/strong&gt; jekyll a la hora de &lt;strong&gt;organizar&lt;/strong&gt; el contenido &lt;strong&gt;de forma automática&lt;/strong&gt;. Por ejemplo, también indicaremos en el nombre del fichero alguno de estos parámetros, siguiendo este formato: &lt;strong&gt;YYYY-MM-DD-nombre-del-post.markdown&lt;/strong&gt;.
&lt;a href=&quot;https://imgur.com/cDSsl0c&quot;&gt;&lt;img src=&quot;https://imgur.com/cDSsl0c.png&quot; title=&quot;source: imgur.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;enlaces-de-interés&quot;&gt;Enlaces de interés:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://markdown.es/&quot;&gt;markdown.es&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 25 Sep 2019 17:04:23 +0200</pubDate>
        <link>http://localhost:4000/2019/Instalaci%C3%B3n-de-Jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/Instalaci%C3%B3n-de-Jekyll/</guid>
        
        <category>jekyll</category>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
